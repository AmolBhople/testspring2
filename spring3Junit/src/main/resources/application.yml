server:
  port: 5555
app:
  name: JUnit-Spring
logging:
  file:
    path: ../../logs/${app.name}
    name: ${app.name}
  level:
    com.junitexample.spring3Junit: TRACE
  pattern:
    console: '%yellow(%d{dd-MM-yyyy HH:mm:ss.SSS}) %magenta([%thread]) %highlight(%-5level) %cyan(%logger).%green(%M) - %msg%n'
    file: '%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger.%M - %msg%n'
  logback:
    rollingpolicy:
      file-name-pattern: ${logging.file.path}/archived1/${logging.file.name}.%d{yyyy-MM-dd}.%i.log.gz #The filename pattern used to create log archives.
      clean-history-on-start: false  #If log archive cleanup should occur when the application starts.
      max-file-size: 10MB #The maximum size of log file before it is archived.
      total-size-cap: 100MB #The maximum amount of size log archives can take before being deleted.
      max-history: 2 #The maximum number of archive log files to keep (defaults to 7).

  register-shutdown-hook: false


spring:
  kafka:
    consumer:
      auto-offset-reset: earliest
  data:
    mongodb:
      authentication-database: admin
      username: root
      password: example
      database: user
      port: 27017
      host: localhost
  application:
    name: JUNIT-TEST




#      uri: mongodb://root:example@mongo:27017/user
